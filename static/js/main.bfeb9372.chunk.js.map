{"version":3,"sources":["redux/actionTypes.js","redux/reducers/products.js","components/Navbar.js","redux/actions/products.js","components/AddForm.js","components/EditForm.js","components/DeleteModal.js","components/Main.js","components/App.js","redux/index.js","serviceWorker.js","index.js"],"names":["LOAD_PRODUCTS","ADD_PRODUCT","REMOVE_PRODUCT","ADD_ERROR","EDIT_PRODUCT","DEFAULT_STATE","products","historicalData","error","getLocalDetail","items","length","lastItem","itemsLength","lastPriceIdOfLastItem","prices","id","state","action","type","name","item","price","date","Date","now","map","Object","assign","deletedProduct","find","product","filter","Navbar","className","AddForm","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addProduct","toggle","this","modalState","onClick","onSubmit","htmlFor","placeholder","onChange","required","step","min","Component","EditForm","editProduct","selectedRow","undefined","getLatestDate","editPreset","DeleteModal","style","backgroundColor","marginBottom","deleteProduct","Main","addModal","editModal","deleteModal","rowSelect","disableBtn","addtoggle","prevState","edittoggle","deletetoggle","condition","handleSelect","event","currentTarget","rowSelected","loadProducts","pricesArr","sort","a","b","list","bind","key","disabled","colspan","textAlign","add","edit","remove","connect","dispatch","localStorage","getItem","axios","get","then","data","res","setItem","JSON","stringify","parse","message","console","log","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bfeb9372.chunk.js","sourcesContent":["export const LOAD_PRODUCTS = \"LOAD_PRODUCTS\";\r\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const ADD_ERROR = \"ADD_ERROR\";\r\nexport const EDIT_PRODUCT = \"EDIT_PRODUCT\";","import { LOAD_PRODUCTS, ADD_PRODUCT, REMOVE_PRODUCT, ADD_ERROR, EDIT_PRODUCT } from \"../actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n  products: [],\r\n  historicalData: {},\r\n  error: null\r\n};\r\n\r\nfunction getLocalDetail(items) {\r\n  if (!items.length) {\r\n    return [];\r\n  }\r\n\r\n  const lastItem = items[items.length - 1];\r\n\r\n  return {\r\n    itemsLength: items.length,\r\n    lastPriceIdOfLastItem: lastItem.prices[lastItem.prices.length - 1].id\r\n  };\r\n}\r\n\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n  const { itemsLength, lastPriceIdOfLastItem } = getLocalDetail(\r\n    action.items || state.products\r\n  );\r\n\r\n  switch (action.type) {\r\n    case LOAD_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        products: action.items\r\n      };\r\n    case ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: [\r\n          ...state.products,\r\n          {\r\n            id: itemsLength + 1,\r\n            name: action.item.name,\r\n            prices: [\r\n              {\r\n                id: lastPriceIdOfLastItem + 1,\r\n                price: action.item.price,\r\n                date: Date.now()\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n    case EDIT_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.map(item => {\r\n          if (item.id === action.item.id) {\r\n            return Object.assign({}, item, {\r\n              name: action.item.name,\r\n              prices: [\r\n                ...item.prices,\r\n                {\r\n                  id: lastPriceIdOfLastItem + 1,\r\n                  price: action.item.price,\r\n                  date: Date.now()\r\n                }\r\n              ]\r\n            });\r\n          }\r\n          return item;\r\n        })\r\n      };\r\n    case REMOVE_PRODUCT:\r\n      const deletedProduct = state.products.find(\r\n        product => product.id === action.id\r\n      );\r\n      return {\r\n        products: state.products.filter(product => product.id !== action.id),\r\n        historicalData: {\r\n          ...state.historicalData,\r\n          [deletedProduct.id]: deletedProduct\r\n        }\r\n      };\r\n    case ADD_ERROR:\r\n      return { ...state, error: action.error };\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react'\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div>\r\n      <div className=\"navbar\">\r\n        <span className=\"navbar-brand\">mPharma</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { LOAD_PRODUCTS, ADD_PRODUCT, REMOVE_PRODUCT, ADD_ERROR, EDIT_PRODUCT } from \"../actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport function products(items) {\r\n  return {\r\n    type: LOAD_PRODUCTS,\r\n    items\r\n  };\r\n}\r\n\r\nexport function add(item) {\r\n  return {\r\n    type: ADD_PRODUCT,\r\n    item\r\n  };\r\n}\r\n\r\nexport function edit(item) {\r\n  return {\r\n    type: EDIT_PRODUCT,\r\n    item\r\n  };\r\n}\r\n\r\nexport function remove(id) {\r\n  return {\r\n    type: REMOVE_PRODUCT,\r\n    id\r\n  }\r\n}\r\n\r\nexport function addError(error){\r\n  return {\r\n    type: ADD_ERROR,\r\n    error\r\n  }\r\n}\r\n\r\nconst url = \"https://www.mocky.io/v2/5c3e15e63500006e003e9795\";\r\n\r\nexport const loadProducts = () => async dispatch => {\r\n  try {\r\n    if (!localStorage.getItem(\"products\")) {\r\n      await axios.get(url).then(data => {\r\n        let res = data.data.products;\r\n        localStorage.setItem(\"products\", JSON.stringify(res));\r\n        dispatch(products(res));\r\n      });\r\n    } else {\r\n      dispatch(products(JSON.parse(localStorage.getItem(\"products\"))));\r\n    }\r\n  } catch (error) {\r\n    dispatch(addError(error.message));\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\n\r\nclass AddForm extends Component {\r\n  state = {\r\n    name: '',\r\n    price: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {name, price} = this.state\r\n    this.props.addProduct({name, price});\r\n    this.setState({\r\n      name: '', price: ''\r\n    })\r\n    this.props.toggle();\r\n  }\r\n\r\n  render() {\r\n    const {name, price} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {this.props.modalState && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <span onClick={this.props.toggle} className=\"close\">\r\n                  &times;\r\n                </span>\r\n                <h2>ADD NEW DRUG</h2>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <label htmlFor=\"fname\">Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"fname\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name of drug..\"\r\n                    onChange={this.handleChange}\r\n                    value={name}\r\n                    required\r\n                  />\r\n\r\n                  <label htmlFor=\"price1\">Price:</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"any\"\r\n                    min=\"0\"\r\n                    id=\"price1\"\r\n                    name=\"price\"\r\n                    placeholder=\"Price..\"\r\n                    onChange={this.handleChange}\r\n                    value={price}\r\n                    required\r\n                  />\r\n\r\n                  <input type=\"submit\" value=\"Add\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddForm;\r\n","import React, {Component} from 'react';\r\n\r\nclass EditForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    price: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n     const name = this.props.selectedRow.name;\r\n     if (this.props.selectedRow.id !== undefined) {\r\n       var price = this.props.getLatestDate(this.props.selectedRow);\r\n     }\r\n     this.editPreset(name, price)\r\n  }\r\n  \r\n  editPreset(name, price) {\r\n    this.setState({\r\n      name,\r\n      price\r\n    })\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {name, price} = this.state;\r\n    this.props.editProduct({ name, price, id: this.props.selectedRow.id });\r\n    this.props.toggle();\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div>\r\n        {this.props.modalState && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <span onClick={this.props.toggle} className=\"close\">\r\n                  &times;\r\n                </span>\r\n                <h2>EDIT DRUG</h2>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <label htmlFor=\"fname\">Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"fname\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name of drug..\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.name}\r\n                    required\r\n                  />\r\n\r\n                  <label htmlFor=\"price1\">Price:</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"any\"\r\n                    min=\"0\"\r\n                    id=\"price1\"\r\n                    name=\"price\"\r\n                    placeholder=\"Price..\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.price}\r\n                    required\r\n                  />\r\n\r\n                  <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditForm;\r\n","import React from 'react';\r\n\r\nconst DeleteModal = (props) => {\r\n  \r\n  const handleDelete = () => {\r\n    props.deleteProduct(props.selectedRow.id);\r\n    props.toggle(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.modalState && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <div style={{backgroundColor:\"#FF3547\", marginBottom:\"0\"}} className=\"modal-header\">\r\n              <span onClick={e => props.toggle(false)} className=\"close\">&times;</span>\r\n              <h2>DELETE</h2>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p className=\"warn-words\">Are you sure to delete selected row?</p>\r\n            </div>\r\n            <div className=\"delete-btns\">\r\n              <button onClick={handleDelete} style={{backgroundColor:\"#ff3547\"}} className=\"delete-options\">\r\n                Yes\r\n              </button>\r\n              <button onClick={e => props.toggle(false)} style={{backgroundColor:\"#444551\"}} className=\"delete-options\">\r\n                No\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { loadProducts, add, edit, remove } from \"../redux/actions/products\";\r\nimport AddForm from \"./AddForm\";\r\nimport EditForm from \"./EditForm\";\r\nimport DeleteModal from \"./DeleteModal\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    addModal: false,\r\n    editModal: false,\r\n    deleteModal: false,\r\n    rowSelect: null,\r\n    disableBtn: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.loadProducts();\r\n  }\r\n\r\n  getLatestDate(item) {\r\n    var pricesArr = item.prices.sort(\r\n      (a, b) => new Date(a.date) - new Date(b.date)\r\n    );\r\n    return pricesArr[pricesArr.length - 1].price;\r\n  }\r\n\r\n  addtoggle = () => {\r\n    this.setState(prevState => ({\r\n      addModal: !prevState.addModal\r\n    }));\r\n  };\r\n\r\n  edittoggle = () => {\r\n    this.setState(prevState => ({\r\n      editModal: !prevState.editModal\r\n    }));\r\n  };\r\n\r\n  deletetoggle = condition => {\r\n    this.setState(prevState => ({\r\n      deleteModal: !prevState.deleteModal,\r\n      disableBtn: condition ? true : false\r\n    }));\r\n  };\r\n\r\n  handleSelect = (item, event) => {\r\n    if (item && event.currentTarget) {\r\n        this.setState({\r\n          rowSelected: item.id !== this.state.rowSelected ? item.id : null,\r\n          disableBtn: item.id === this.state.rowSelected\r\n        });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const list = this.props.products.map(\r\n      item =>\r\n        <tr\r\n          style={{\r\n            backgroundColor:\r\n              item.id === this.state.rowSelected ? \"#a4d4ff\" : \"\"\r\n          }}\r\n          onClick={this.handleSelect.bind(this, item)}\r\n          key={item.id}\r\n        >\r\n          <td>{item.name}</td>\r\n          <td>{this.getLatestDate(item)}</td>\r\n        </tr>\r\n    );\r\n\r\n    const selectedRow = this.props.products.find(\r\n      item => this.state.rowSelected === item.id\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"head-text\">\r\n          <p>{`${!this.state.disableBtn ? \"1\" : \"No\"} row selected`}</p>\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <div className=\"button-container-sub\">\r\n            <button\r\n              style={{ backgroundColor: \"#ffbb33\" }}\r\n              className=\"button\"\r\n              onClick={this.addtoggle}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"button-container-sub\">\r\n            <button\r\n              style={{ backgroundColor: \"#ffbb33\" }}\r\n              className=\"button\"\r\n              disabled={this.state.disableBtn}\r\n              onClick={this.edittoggle}\r\n            >\r\n              Edit\r\n            </button>\r\n          </div>\r\n          <div className=\"button-container-sub\">\r\n            <button\r\n              style={{ backgroundColor: \"#FF3547\" }}\r\n              className=\"button\"\r\n              disabled={this.state.disableBtn}\r\n              onClick={this.deletetoggle}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"table-row\">\r\n            <div className=\"table-row-col\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Price</th>\r\n                  </tr>\r\n                </thead>\r\n                {this.props.error ? (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td colspan=\"2\" style={{ textAlign: \"center\" }}>\r\n                        Products not found\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ) : (\r\n                  <tbody>{list}</tbody>\r\n                )}\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AddForm\r\n          modalState={this.state.addModal}\r\n          toggle={this.addtoggle}\r\n          addProduct={this.props.add}\r\n        />\r\n        {this.state.editModal && (\r\n          <EditForm\r\n            modalState={this.state.editModal}\r\n            toggle={this.edittoggle}\r\n            selectedRow={selectedRow}\r\n            getLatestDate={this.getLatestDate}\r\n            editProduct={this.props.edit}\r\n          />\r\n        )}\r\n        {this.state.deleteModal && (\r\n          <DeleteModal\r\n            modalState={this.state.deleteModal}\r\n            toggle={this.deletetoggle}\r\n            selectedRow={selectedRow}\r\n            deleteProduct={this.props.remove}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loadProducts, add, edit, remove }\r\n)(Main);\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"../redux\";\nimport NavBar from \"./Navbar\";\nimport Main from \"./Main\";\n\nconst store = configureStore();\n\nconst App = () => (\n  <Provider store={store}>\n    <NavBar />\n    <Main />\n  </Provider>\n);\n\nexport default App;\n","import rootReducer from './reducers';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport function configureStore() {\r\n  const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(thunk),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : f => f\r\n    )\r\n  );\r\n  return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}